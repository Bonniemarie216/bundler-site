<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bundler Blog</title>
  <subtitle>The latest news on Bundler</subtitle>
  <id>http://bundler.io/blog</id>
  <link href="http://bundler.io/blog"/>
  <link href="http://bundler.io/blog/feed.xml" rel="self"/>
  <updated>2021-02-15T11:33:00+00:00</updated>
  <author>
    <name>The Bundler Team</name>
  </author>
  <entry>
    <title>A more secure bundler: We fixed our source priorities.</title>
    <link rel="alternate" href="http://bundler.io/blog/2021/02/15/a-more-secure-bundler-we-fixed-our-source-priorities.html"/>
    <id>http://bundler.io/blog/2021/02/15/a-more-secure-bundler-we-fixed-our-source-priorities.html</id>
    <published>2021-02-15T11:33:00+00:00</published>
    <updated>2021-02-26T10:49:42+00:00</updated>
    <author>
      <name>David Rodríguez</name>
    </author>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The part about the Bundler release in this blog post is not currently
relevant. We had to revert the change since it created breaking behavior for
our users. We’ll remove this note once we release a properly working version
that implements this improvement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="what-happened"&gt;What happened?&lt;/h2&gt;

&lt;p&gt;Last week &lt;a href="https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610"&gt;an article about “Dependency
Confusion”&lt;/a&gt;
hit the news, where a developer was able to make thousands of dollars on bug
bounty programs from big tech companies, by pushing libraries to public
repositories that ended up unintentionally being installed into these companies
servers.&lt;/p&gt;

&lt;p&gt;The developer was able to expose (in a non-malicious way) a vulnerability
present in well-known dependency managers, where given a library name they will
end up preferring installing it from a public source rather than from a private
source. This is not secure because the name in the public source is controlled
by the first person claiming it, whereas the name in the private source is controlled
by the private source owner.&lt;/p&gt;

&lt;p&gt;Unfortunately, Bundler had this vulnerability.&lt;/p&gt;

&lt;p&gt;There’s good news though:&lt;/p&gt;

&lt;h2 id="things-were-safe-on-the-rubygemsorg-side"&gt;Things were safe on the rubygems.org side&lt;/h2&gt;

&lt;p&gt;The rubygems.org organization, in collaboration with
&lt;a href="https://diffend.io"&gt;diffend.io&lt;/a&gt;, have a pretty good malicious code detection
system. In fact, the only reason this developer was able to make all this money
by getting these gems installed in companies private servers is because our
system detected them, flagged them for us, and we determined them to be
non-malicious, and only for research purposes. If those gems had been malicious,
we wouldn’t have allowed them.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://mensfeld.pl/2021/02/rubygems-dependency-confusion-side-of-things/"&gt;more detailed blog
post&lt;/a&gt;
from our diffend.io friends about what happened in the rubygems.org side of
things, and how things were secure.&lt;/p&gt;

&lt;h2 id="the-issue-has-been-fixed-in-bundler-2210"&gt;The issue has been fixed in bundler 2.2.10&lt;/h2&gt;

&lt;p&gt;We have shipped bundler 2.2.10 with a fix, and now whenever you specify a block
source in your &lt;code&gt;Gemfile&lt;/code&gt;, bundler will prioritize it when resolving direct
dependencies specified inside, and also transitive dependencies of those. So in
the following situation both &lt;code&gt;my-private-gem&lt;/code&gt; and &lt;code&gt;my-another-private-gem&lt;/code&gt; will
be picked up from &lt;code&gt;https://my-private-server&lt;/code&gt;, even if someone pushes a higher
version with the same name to &lt;code&gt;rubygems.org&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# my-private-gem.gemspec&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dependency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"my-another-private-gem"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Gemfile&lt;/span&gt;

&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="s2"&gt;"https://rubygems.org"&lt;/span&gt;

&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="s2"&gt;"https://my-private-server"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"my-private-gem"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure you upgrade your bundler version either by running &lt;code&gt;gem install
bundler&lt;/code&gt;, or by upgrading rubygems through &lt;code&gt;gem update --system&lt;/code&gt; (which will
install bundler 2.2.10 as a default gem).&lt;/p&gt;

&lt;h2 id="final-notes"&gt;Final notes&lt;/h2&gt;

&lt;p&gt;The bundler team had actually been aware of this issue for a while, but
unfortunately lacks resources to take care of everything we need to take care,
so the fix was postponed for too long. Maintaining the rubygems.org
infrastructure and its client libraries requires a big amount of work and we
barely manage to keep up with it. So, if your company really needs us to stay on
top of these issues, please consider funding
&lt;a href="https://rubytogether.org/"&gt;RubyTogether&lt;/a&gt; ❤️.&lt;/p&gt;

&lt;p&gt;That’s all for today,&lt;/p&gt;

&lt;p&gt;Happy bundling!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Deivid, André and the RubyGems team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Bundler v2.2: Multiplatform, Funding, and more.</title>
    <link rel="alternate" href="http://bundler.io/blog/2020/12/09/bundler-v2-2.html"/>
    <id>http://bundler.io/blog/2020/12/09/bundler-v2-2.html</id>
    <published>2020-12-09T16:32:00+00:00</published>
    <updated>2021-02-26T10:49:42+00:00</updated>
    <author>
      <name>David Rodríguez</name>
    </author>
    <content type="html">&lt;p&gt;After an intense year of work, we’re finally ready to announce the release of
the final version of bundler 2.2, right in time to be included with Christmas’
eve Ruby 3.0 release.&lt;/p&gt;

&lt;h2 id="multiplatform-support"&gt;Multiplatform support&lt;/h2&gt;

&lt;p&gt;Historically, bundler has had issues when it comes to choosing and prioritizing
platform specific versions of gems during resolution. With this release, we have
made several improvements in this regard and we expect to ship a much more user
friendly behavior here.&lt;/p&gt;

&lt;p&gt;Huge thanks to &lt;a href="https://github.com/kou"&gt;@kou&lt;/a&gt; for contributing awesome fixes in
this area, and to &lt;a href="https://github.com/larskanis"&gt;@larskanis&lt;/a&gt; for early testing
the improvements and giving us feedback.&lt;/p&gt;

&lt;p&gt;Bundler now needs to record the specific platform it used to resolve a given
&lt;code&gt;Gemfile&lt;/code&gt; in the lockfile, so you will notice some source control differences
there when you upgrade. Commit these changes for all your supported platforms to
make sure all developers of your application get a consistent resolution under
all platforms.&lt;/p&gt;

&lt;h2 id="find-out-about-gems-you-depend-on-that-need-funding"&gt;Find out about gems you depend on that need funding&lt;/h2&gt;

&lt;p&gt;We really want to help building a more sustainable ruby ecosystem, so we’re
shipping a new &lt;code&gt;bundle fund&lt;/code&gt; command that helps you discovering the libraries
you depend on that need funding.&lt;/p&gt;

&lt;p&gt;If you develop a gem that needs funding, make sure you fill in the &lt;code&gt;funding_uri&lt;/code&gt;
metadata in your gemspec, like this:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Gem&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Specification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;gem&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;GEM_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;homepage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;GEM_HOMEPAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;metadata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"funding_uri"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;GEM_FUNDING_PAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As soon as people start filling this metadata, &lt;code&gt;bundle fund&lt;/code&gt; will start
reporting all of your dependencies that need funding.&lt;/p&gt;

&lt;p&gt;Big kudos to &lt;a href="https://github.com/gjtorikian"&gt;@gjtorikian&lt;/a&gt; for coding this
feature both on the server and the client sides, and for waiting so patiently
until we had time to review his work.&lt;/p&gt;

&lt;p&gt;And talking about funding, remember: &lt;a href="https://rubytogether.org/"&gt;RubyTogether&lt;/a&gt; needs ❤️.&lt;/p&gt;

&lt;h2 id="improved-windows-support"&gt;Improved Windows support&lt;/h2&gt;

&lt;p&gt;Partly because of the improved multiplatform support, but also because of many
other fixes, bundler now supports Windows much better. We even have a Windows CI
running to make sure we minimize regressions under that platform.&lt;/p&gt;

&lt;h2 id="better-integration-inside-ruby-core"&gt;Better integration inside ruby-core&lt;/h2&gt;

&lt;p&gt;Since ruby 2.6 bundler is included as default gem with ruby. This change was
exciting but didn’t happen without issues. We have made many fixes in this
regard and we believe things should be much smoother now. As in, you shouldn’t
notice any behavioral difference at all when running bundler as a regular gem vs
as a default gem.&lt;/p&gt;

&lt;h2 id="better-support-for-jruby"&gt;Better support for JRuby&lt;/h2&gt;

&lt;p&gt;We have been working on improving our compatibility with jruby as well. We now
run a small subset of our CI under jruby to prevent regressions and cover the
related bug fixes that we ship.&lt;/p&gt;

&lt;h2 id="better-more-flexible-gem-templates"&gt;Better, more flexible, gem templates&lt;/h2&gt;

&lt;p&gt;We have shipped a lot of improvements to the default &lt;code&gt;bundle gem&lt;/code&gt; template. You
can now automatically set up a configuration for the main CI providers, or
include &lt;code&gt;rubocop&lt;/code&gt; to check your code style, among other improvements. We also
make sure all gems are now generated with a default minimum supported ruby,
which is a good practice that we really want to promote.&lt;/p&gt;

&lt;h2 id="and-a-bunch-of-bug-fixes"&gt;And a bunch of bug fixes!&lt;/h2&gt;

&lt;p&gt;Last but not least, we have fixed about 60 bugs in this release. Our main focus
at the moment is stability, so we want to kill all those issues that sometimes
make bundler get in the middle.&lt;/p&gt;

&lt;h2 id="how-to-get-it"&gt;How to get it&lt;/h2&gt;

&lt;p&gt;Run &lt;code&gt;gem install bundler&lt;/code&gt; to upgrade to the newest version of Bundler.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;That’s all for now. We really hope you enjoy this release. Happy Bundling!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>March Bundler Update</title>
    <link rel="alternate" href="http://bundler.io/blog/2020/04/27/march-monthly-update.html"/>
    <id>http://bundler.io/blog/2020/04/27/march-monthly-update.html</id>
    <published>2020-04-27T00:00:00+00:00</published>
    <updated>2021-02-26T10:49:42+00:00</updated>
    <author>
      <name>Gift Egwuenu</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the Bundler monthly update! As part of our efforts at &lt;a href="https://rubytogether.org"&gt;Ruby Together&lt;/a&gt;, we publish a recap of the work that we’ve done the previous month. Read on to find out what updates were made to Bundler in March.&lt;/p&gt;

&lt;p&gt;Amazingly, all that work that the entire Bundler and RubyGems teams have been working at for years has paid off in a really big way: Bundler and RubyGems have merged repositories! On GitHub, &lt;code&gt;bundler/bundler&lt;/code&gt; is archived, and all ongoing work on both projects now takes place inside &lt;code&gt;RubyGems/RubyGems&lt;/code&gt;. All other repositories from the Bundler organization have either been archived (if unused) or moved to the RubyGems organization.&lt;/p&gt;

&lt;p&gt;Not just the repositories have changed, either: the Bundler and RubyGems teams have merged as well. It’ll take us some time to work through 20 years worth of documentation and webpages, but we’ll be combining and updating them as fast as we can.&lt;/p&gt;

&lt;p&gt;From this point forward, Bundler news will be reported together with RubyGems news. Hooray! 🎉&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Interested in contributing to Bundler? We always welcome contributions in the forms of triaging bugs, adding new features, writing docs, and engaging with the wider community. Visit the &lt;a href="https://github.com/rubygems/rubygems/blob/master/bundler/doc/contributing/README.md"&gt;Bundler Contributor Guidelines&lt;/a&gt; on GitHub to get started. Don’t have time to contribute, but want to support our work? Sign up as a member of &lt;a href="https://rubytogether.org/"&gt;Ruby Together&lt;/a&gt; to help fund our work to keep Bundler working for everyone.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Solutions for 'Cant find gem bundler (&gt;= 0.a) with executable bundle'</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/05/14/solutions-for-cant-find-gem-bundler-with-executable-bundle.html"/>
    <id>http://bundler.io/blog/2019/05/14/solutions-for-cant-find-gem-bundler-with-executable-bundle.html</id>
    <published>2019-05-14T00:00:00+00:00</published>
    <updated>2021-02-26T10:49:42+00:00</updated>
    <author>
      <name>Colby Swandale</name>
    </author>
    <content type="html">&lt;p&gt;TL;DR: run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="what-is-this-error"&gt;What is this error?&lt;/h2&gt;

&lt;p&gt;Some versions of RubyGems try to use the exact version of Bundler listed in your Gemfile.lock anytime you run the bundle command. If you are using one of those versions of RubyGems, but do not have that exact version of Bundler installed, you will run into this error:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Can't find gem bundler (&amp;gt;= 0.a) with executable bundle (Gem::GemNotFoundException)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This error is saying (in a very particular way) that RubyGems was unable to find the exact version of Bundler that is in your Gemfile.lock.&lt;/p&gt;

&lt;p&gt;This is a bug, and future Bundler &amp;amp; RubyGems versions will automatically install and use the exact version of Bundler your application needs to run.&lt;/p&gt;

&lt;h2 id="what-are-the-possible-solutions"&gt;What are the possible solutions?&lt;/h2&gt;

&lt;p&gt;There are a few options, depending on what you are able to update to newer versions.&lt;/p&gt;

&lt;h2 id="install-the-exact-bundler"&gt;Install the exact Bundler&lt;/h2&gt;

&lt;p&gt;The only version of Bundler 100% guaranteed to work with a given &lt;code&gt;Gemfile.lock&lt;/code&gt; file is the Bundler version that generated it. So the most reliable way to fix this error is to install that exact Bundler version.&lt;/p&gt;

&lt;p&gt;This will be the default behavior of &lt;code&gt;bundle install&lt;/code&gt; in the future, but for now you can get that result with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="update-rubygems"&gt;Update RubyGems&lt;/h2&gt;

&lt;p&gt;More recent RubyGems versions are less strict and as long as the major Bundler version in the &lt;code&gt;BUNDLED WITH&lt;/code&gt; section of your &lt;code&gt;Gemfile.lock&lt;/code&gt; file matches the major Bundler version you are running, it won’t generate an error.&lt;/p&gt;

&lt;p&gt;You can try updating RubyGems by running &lt;code&gt;gem update --system&lt;/code&gt;, but note that if the Ruby you’re running is provided by an OS package, this most likely won’t work since the RubyGems update should come from another OS package.&lt;/p&gt;

&lt;h2 id="update-ruby"&gt;Update Ruby&lt;/h2&gt;

&lt;p&gt;Similarly to the previous solution, Ruby 2.6.3 includes a version of RubyGems that’s less strict, so upgrading Ruby will automatically upgrade RubyGems and should fix the issue too.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;— Colby and the Bundler team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>January and February Bundler Update</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/03/12/january-february-bimonthly-update.html"/>
    <id>http://bundler.io/blog/2019/03/12/january-february-bimonthly-update.html</id>
    <published>2019-03-12T00:00:00+00:00</published>
    <updated>2021-02-26T10:49:42+00:00</updated>
    <author>
      <name>Stephanie Morillo</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the December 2018 monthly update!&lt;/p&gt;

&lt;p&gt;In January, we awarded our &lt;a href="https://rubytogether.org/projects"&gt;first three-month long project grant&lt;/a&gt; to David Rodriguez for his work on Bundler and RubyGems. Here’s his first update:&lt;/p&gt;

&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;This is my first progress report about my collaboration with Ruby Together to improve Bundler’s release process and deprecation management. I feel really proud that I’ve been given this opportunity, and I will do my best to improve the core of the Ruby ecosystem!&lt;/p&gt;

&lt;p&gt;I have focused on several things these first two weeks:&lt;/p&gt;

&lt;p&gt;I stabilized the builds of both Bundler and RubyGems, by fixing skipped tests and flaky failures to get both CIs consistently green. This should make subsequent improvements easier. In RubyGems, I landed several bug fixes in the install and update commands. With the release of Bundler 2 supporting only RubyGems 3.0, the basic command, “gem install rails”, started failing. We reverted the RubyGems 3.0 requirement in Bundler 2.0.1 to workaround this, but I intend to make &lt;code&gt;gem install&lt;/code&gt; properly fallback to installing an older version when the &lt;code&gt;required_rubygems_version&lt;/code&gt; requirement of the latest version is not satisfied. However, I decided to initially focus on some misc bug fixes in the install and update commands, to familiarize with the RubyGems code base and to be able to tackle this improvement with more confidence in the upcoming weeks. Big kudos to RubyGems contributor @MSP-Greg for providing the initial work for some of these fixes!&lt;/p&gt;

&lt;p&gt;In Bundler, I started moving forward a new approach for deprecations, which will be enabled by default in the next release. We have a lot of improvements in Bundler’s master, but we haven’t released them for a long time, because they imply breaking changes. By starting to display deprecations for these changes, we’ll be closer to actually being able to release them. I also started addressing some issues surfaced by the Bundler 2 release, specifically about being too picky about the Bundler version a specific application should run. Currently, Bundler will raise if the version in the BUNDLED WITH section of the lock file doesn’t match the running version. We feel it’s premature to do this now, so I’m looking into downgrading this to a warning for the time being. I also coordinated with @colby-swandale the merge of Bundler 2 back into master, which hasn’t yet happened since the Bundler 2 release.&lt;/p&gt;

&lt;p&gt;Finally, I’ve dedicated a fair amount of time to review the integration of Bundler into ruby-core since the 2.6 release, and the “gemification” of the standard library. Thanks to @hsbt, this is now a reality, but it comes with its own set of difficulties. I’ve been studying these difficulties and creating some fixes and workarounds for them. I plan to keep working on making this transition as smooth as possible for everyone.&lt;/p&gt;

&lt;p&gt;I really hope my work is appreciated by the community and I expect to deliver better and bigger improvements in the upcoming weeks!&lt;/p&gt;

&lt;p&gt;Best regards,
David&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a combined update for January and February, so here is David’s second update as well:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;This is my second report about my collaboration with Rubytogether to improve bundler’s release process and deprecation management. They were a couple of exciting weeks, because I now feel I’m closer to being ready to release some of the work I’ve been doing.&lt;/p&gt;

&lt;p&gt;The following is a non extensive list of the stuff I’ve been focusing on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I continued the work on bundler’s deprecations. I reviewed each deprecation and made sure the messages are actionable, they show up when they should, and they have passing specs. In particular, I made a plan for the deprecation of the changes that are most likely to be controversial and require special care. For example, I proposed to deprecate sticky options, and custom gemfile sources (such as :github, :gist, or :bitbucket), in a smoother process that should be more friendly to our users because it happens in several steps across multiple major versions. Finally, I made sure that we use non-deprecated features in our own specs, in order to set a good example :)&lt;/li&gt;
  &lt;li&gt;In addition to deprecations, I also finished the work that I mentioned in &lt;a href=""&gt;the previous report&lt;/a&gt; about only reporting warnings and not hard errors when we find a mismatch between the running bundler version and the version the Gemfile was created with. I hope to release these changes in both rubygems and bundler soon.&lt;/li&gt;
  &lt;li&gt;I also continued to improve the integration of bundler into ruby-core. I proposed to &lt;a href="https://github.com/bundler/bundler/pull/6985"&gt;eliminate the &lt;code&gt;git&lt;/code&gt; dependency from bundler’s gemspec&lt;/a&gt; (which has caused problems with the integration), and raised &lt;a href="https://bugs.ruby-lang.org/issues/15610"&gt;an issue&lt;/a&gt; with ruby-core about where the default copies of bundler &amp;amp; rubygems should live, and how they should get updated. I’m in touch with hsbt and we plan to discuss the future of this integration some time in the near future.&lt;/li&gt;
  &lt;li&gt;Finally, I’ve been working on making our specs “docker friendly”, and making bundler testable under bare docker images of ruby and rvm. My understanding is that this should make it much easier to reproduce CI failures (or user reported bugs), and to detect version manager specific regressions (or ruby-core integration bugs). Besides that, testing on top of custom docker images is something provided built-in by Azure pipelines, so it’s a good opportunity to try it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned in the previous report, I’m very glad to be working on bundler during these weeks. Any suggestions or feedback you may have, feel free to share them through Github, Slack or whatever means you like!&lt;/p&gt;

&lt;p&gt;See you again soon,
David&lt;/p&gt;

&lt;p&gt;In January and February, Bundler gained 110 new commits, contributed by 11 authors. There were 1,401 additions and 1,503 deletions across 849 files.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Interested in contributing to Bundler? We always welcome contributions in the forms of triaging bugs, adding new features, writing docs, and engaging with the wider community. Visit the &lt;a href="https://github.com/bundler/bundler/blob/master/doc/contributing/README.md"&gt;Bundler Contributor Guidelines&lt;/a&gt; on GitHub to get started. Don’t have time to contribute, but want to support our work? Sign up as a member of &lt;a href="https://rubytogether.org/"&gt;Ruby Together&lt;/a&gt; to help fund our work to keep Bundler working for everyone.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>December 2018 Bundler Update</title>
    <link rel="alternate" href="http://bundler.io/blog/2019/02/02/december-monthly-update.html"/>
    <id>http://bundler.io/blog/2019/02/02/december-monthly-update.html</id>
    <published>2019-02-02T00:00:00+00:00</published>
    <updated>2021-02-26T10:49:42+00:00</updated>
    <author>
      <name>Stephanie Morillo</name>
    </author>
    <content type="html">&lt;p&gt;Welcome to the December 2018 monthly update!&lt;/p&gt;

&lt;p&gt;In December, Bundler reached two huge and exciting milestones. First, Ruby included Bundler for the first time ever, including Bundler 1.17.2 in Ruby 2.6. Special thanks are due to &lt;a href="https://github.com/hsbt"&gt;@hsbt&lt;/a&gt; for years worth of work integrating Bundler into the ruby-core test suite and keeping everything working and up to date.&lt;/p&gt;

&lt;p&gt;Second, Bundler &lt;a href="https://bundler.io/blog/2019/01/03/announcing-bundler-2.html"&gt;shipped version 2.0&lt;/a&gt;! It’s a big milestone, and the Bundler team is very excited to adopt a yearly major release cadence, to better match Ruby itself.&lt;/p&gt;

&lt;p&gt;Bundler gained 55 new commits, contributed by 7 authors. There were 225 additions and 63 deletions across 21 files.&lt;/p&gt;

&lt;p&gt;Interested in contributing to Bundler? We always welcome contributions in the forms of triaging bugs, adding new features, writing docs, and engaging with the wider community. Visit the &lt;a href="https://github.com/bundler/bundler/blob/master/doc/contributing/README.md"&gt;Bundler Contributor Guidelines&lt;/a&gt; on GitHub to get started. Don’t have time to contribute, but want to support our work? Sign up as a member of &lt;a href="https://rubytogether.org/"&gt;Ruby Together&lt;/a&gt; to help fund our work to keep Bundler working for everyone.&lt;/p&gt;
</content>
  </entry>
</feed>
